{"ast":null,"code":"var _jsxFileName = \"/var/www/html/pokedex/src/components/layout/Category.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '6060B2',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n};\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      types: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      pokemonIndex\n    } = this.props.match.params;\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n    const pokemonRes = await Axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n    let {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = '';\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat['base_stat'];\n          break;\n\n        case 'attack':\n          attack = stat['base_stat'];\n          break;\n\n        case 'defense':\n          defense = stat['base_stat'];\n          break;\n\n        case 'speed':\n          speed = stat['base_stat'];\n          break;\n\n        case 'special-attack':\n          specialAttack = stat['base_stat'];\n          break;\n\n        case 'special-defense':\n          specialDefense = stat['base_stat'];\n          break;\n\n        default:\n          break;\n      }\n    });\n    const height = Math.round((pokemonRes.data.height * 0.328084 + 0.00001) * 100) / 100;\n    const weight = Math.round((pokemonRes.data.weight * 0.220462 + 0.00001) * 100) / 100;\n    const types = pokemonRes.data.types.map(type => type.type.name);\n    const themeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\n    const abilities = pokemonRes.data.abilities.map(ability => {\n      return ability.ability.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n    }).join(', ');\n    const evs = pokemonRes.data.stats.filter(stat => {\n      if (stat.effort > 0) {\n        return true;\n      }\n\n      return false;\n    }).map(stat => {\n      return `${stat.effort} ${stat.stat.name.toLowerCase().split('-').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ')}`;\n    }).join(', ');\n    await Axios.get(pokemonSpeciesUrl).then(res => {\n      let description = '';\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === 'en') {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data['gender_rate'];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n      const catchRate = Math.round(100 / 255 * res.data['capture_rate']);\n      const eggGroups = res.data['egg_groups'].map(group => {\n        return group.name.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n      }).join(', ');\n      const hatchSteps = 255 * (res.data['hatch_counter'] + 1);\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hatchSteps\n      });\n    });\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      types\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"category col text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Primary\")));\n  }\n\n}","map":{"version":3,"sources":["/var/www/html/pokedex/src/components/layout/Category.js"],"names":["React","Component","Axios","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Category","state","types","componentDidMount","pokemonIndex","props","match","params","pokemonUrl","pokemonSpeciesUrl","pokemonRes","get","name","data","imageUrl","sprites","front_default","hp","attack","defense","speed","specialAttack","specialDefense","stats","map","stat","height","Math","round","weight","type","themeColor","length","abilities","ability","toLowerCase","split","s","charAt","toUpperCase","substring","join","evs","filter","effort","then","res","description","flavor_text_entries","some","flavor","language","flavor_text","femaleRate","genderRatioFemale","genderRatioMale","catchRate","eggGroups","group","hatchSteps","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Axios from 'axios';\n\nconst TYPE_COLORS = {\n  bug: 'B1C12E',\n  dark: '4F3A2D',\n  dragon: '755EDF',\n  electric: 'FCBC17',\n  fairy: 'F4B1F4',\n  fighting: '823551D',\n  fire: 'E73B0C',\n  flying: 'A3B3F7',\n  ghost: '6060B2',\n  grass: '74C236',\n  ground: 'D3B357',\n  ice: 'A3E7FD',\n  normal: 'C8C4BC',\n  poison: '934594',\n  psychic: 'ED4882',\n  rock: 'B9A156',\n  steel: 'B5B5C3',\n  water: '3295F6'\n};\n\nexport default class Category extends Component {\n  state = {\n    types: []\n  };\n\n  async componentDidMount() {\n    const { pokemonIndex } = this.props.match.params;\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}/`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}/`;\n\n    const pokemonRes = await Axios.get(pokemonUrl);\n\n    const name = pokemonRes.data.name;\n    const imageUrl = pokemonRes.data.sprites.front_default;\n\n    let { hp, attack, defense, speed, specialAttack, specialDefense } = '';\n\n    pokemonRes.data.stats.map(stat => {\n      switch (stat.stat.name) {\n        case 'hp':\n          hp = stat['base_stat'];\n          break;\n        case 'attack':\n          attack = stat['base_stat'];\n          break;\n        case 'defense':\n          defense = stat['base_stat'];\n          break;\n        case 'speed':\n          speed = stat['base_stat'];\n          break;\n        case 'special-attack':\n          specialAttack = stat['base_stat'];\n          break;\n        case 'special-defense':\n          specialDefense = stat['base_stat'];\n          break;\n        default:\n          break;\n      }\n    });\n\n    const height =\n      Math.round((pokemonRes.data.height * 0.328084 + 0.00001) * 100) / 100;\n\n    const weight =\n      Math.round((pokemonRes.data.weight * 0.220462 + 0.00001) * 100) / 100;\n\n    const types = pokemonRes.data.types.map(type => type.type.name);\n\n    const themeColor = `${TYPE_COLORS[types[types.length - 1]]}`;\n\n    const abilities = pokemonRes.data.abilities\n      .map(ability => {\n        return ability.ability.name\n          .toLowerCase()\n          .split('-')\n          .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n          .join(' ');\n      })\n      .join(', ');\n\n    const evs = pokemonRes.data.stats\n      .filter(stat => {\n        if (stat.effort > 0) {\n          return true;\n        }\n        return false;\n      })\n      .map(stat => {\n        return `${stat.effort} ${stat.stat.name\n          .toLowerCase()\n          .split('-')\n          .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n          .join(' ')}`;\n      })\n      .join(', ');\n\n    await Axios.get(pokemonSpeciesUrl).then(res => {\n      let description = '';\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === 'en') {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n      const femaleRate = res.data['gender_rate'];\n      const genderRatioFemale = 12.5 * femaleRate;\n      const genderRatioMale = 12.5 * (8 - femaleRate);\n\n      const catchRate = Math.round((100 / 255) * res.data['capture_rate']);\n\n      const eggGroups = res.data['egg_groups']\n        .map(group => {\n          return group.name\n            .toLowerCase()\n            .split(' ')\n            .map(s => s.charAt(0).toUpperCase() + s.substring(1))\n            .join(' ');\n        })\n        .join(', ');\n\n      const hatchSteps = 255 * (res.data['hatch_counter'] + 1);\n\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hatchSteps\n      });\n    });\n\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      types\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"category col text-center\">\n          <button type=\"button\" className=\"btn btn-primary\">Primary</button>\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}